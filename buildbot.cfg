# -*- python -*-
# ex: set syntax=python:

###############################################################################
#poy_test.native is used as a testing builder that processes arguments and does
#any comparisons and script manipulation necessary. Scripts are run from the
#test/ directory and should be relative to that location.
#
#This file is broken up in to the following sections
#    1-Helper functions
#      -used to manipulate/add/remove arguments
#      -define what an important file is to trigger a build
#    2-Constants
#      -username, port and password constants for buildbot
#      -script-wise constants (timeout and if to purge repos)
#    3-Project Identity
#      -web-server and database location
#      -name of project and description
#    4-BuildSlaves
#      -list of buildslaves, IPs, names and email addresses
#    5-Lock Definition
#      -locks for buildslaves (number of threads per machine)
#    6-Command Step Abstractions
#      -singular commands used to build up an application (hg, sed, building, ...)
#    7-Scripts
#      -the scripts built from the commands above
#    8-Configuration Factory
#      -scripts to define configuration/build scripts
#    9-Command Factory
#      -defines scripts for commands and basic analysis (run everyday)
#   10-Full Analysis Factory
#      -defines scripts that take a long time (run once a week)
#   11-Parallel Analysis Factory
#      -defines our parallel testing scripts (run once a week)
#   12-Schedulers
#      -defines when the above builds defined by the factories are built
#   13-Status / Notification Settings
#      -define what happens when an error is found in poy
#      -authorization for commands in web-interface
###############################################################################

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias (c) to save typing.
c = BuildmasterConfig = {}

###############################################################################
####### Helper functions
import os

# Search a list for a tag and get the next one. usually the contents of -message
def find_name( tag, list ):
    try :
        i = list.index( tag )
        return (list[i+1])
    except ValueError :
        return -1

# return all the indices of a value
def all_indices(value, qlist):
    indices = []
    idx = -1
    while True:
        try:
            idx = qlist.index(value, idx+1)
            indices.append(idx)
        except ValueError:
            break
    return indices

# replace options in the script to replacement options; -stdX -> -ostdX; except
# for scripts that are supposed to error; those don't work the same way.
def replace_option(script_elm):
    if script_elm == "-stdout" :
        return("-ostdout")
    elif script_elm == "-stderr" :
        return("-ostderr")
    else :
        return(script_elm)

def replace_options( script ):
    script = map (lambda (x): replace_option( x ), script)
    return( script )

def count_element( script, tag ) :
    ret = 0
    for x in script:
        if x == tag :
            ret = ret + 1
    return ret

def make_filenamen( n ) :
    ret = ""
    for i in range(n) :
        ret = ret + "FILENAME" + str(i+1) + "."
    return ret

# this is a helper so we don't include comparision of stderr/out when we have a
# timer in the script
def has_remove_time( options ):
    try :
        i = options.index("-timer")
    except ValueError :
        i = -1
    if i == -1 :
        return True
    else :
        del options[i]
        return False


def rem_stdcomparisons( script, stdout, stderr ):
    if stdout :
        try :
            i = script.index("-stdout");
            del script[i+1];
            del script[i];
        except ValueError :
            pass
    if stderr :
        try :
            i = script.index("-stderr");
            del script[i+1];
            del script[i];
        except ValueError :
            pass


#command list without -inputfile filename that is added. handles multiple inputs
def add_input_file( script, num, file ):
    indices = all_indices( "-inputfile", script );
    try :
        script.insert( indices[num]+1, file )
    except (ValueError, IndexError) as e:
        return
 

# add -stdout and -stderr arguments to test arguments for comparison
def add_stdcomparisons( script, stdout, stderr ):
    path_info = os.path.split( script[ script.index("-command")+1 ] )
    in_files = make_filenamen( count_element( script, "-inputfile" ) )
    if has_remove_time(script) :
        if stdout :
            script.append( "-stdout" );
            script.append( (path_info[0] + "/stdout/" + in_files + path_info[1] + ".out") )
        if stderr :
            script.append( "-stderr" );
            script.append( (path_info[0] + "/stderr/" + in_files + path_info[1] + ".err") )
    return

# define a function to determine if the changeset is important. This is
# currently defined for files with extensions: c/h/ml/mli/in/tex.
def isImportant(change):
    for name in change.files:
        if name.endswith(".c")  : return True
        if name.endswith(".h")  : return True
        if name.endswith(".in") : return True
        if name.endswith(".ml") : return True
        if name.endswith(".mli"): return True
        if name.endswith(".tex"): return True
    return False

# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which slaves can execute them.  Note that any particular build will
# only take place on one slave.
c['builders'] = []
def add_builder( (f_name,f_script), slaves, names ):
    c['builders'].append( BuilderConfig( name=f_name, slavenames=slaves, factory=f_script ))
    names.append( f_name ) 
    return


###############################################################################
####### Constants in Document

password = "REDACT"
master_port = 9989

tester_timeout = 2*60*60 #two hours

purge_repos = True

###############################################################################
####### PROJECT IDENTITY
from buildbot.changes.pb import PBChangeSource

# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the
# 'titleURL') and is embedded in the title of the waterfall HTML page.
c['title'] = "POY 5 -- Black Sabbath"
c['titleURL'] = "REDACT"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.
c['buildbotURL'] = "http://localhost:8010/"

# This specifies what database buildbot uses to store change and scheduler
# state.  You can leave this at its default for all but the largest
# installations.
c['db_url'] = "sqlite:///state.sqlite"

# the 'change_source' setting tells the buildmaster how it should find out
# about source code changes.  Here we point to the buildbot clone of pyflakes.
c['change_source'] = PBChangeSource(user='hg',passwd=password, port=master_port)


###############################################################################
####### BUILDSLAVES
# The 'slaves' list defines the set of recognized buildslaves. Each element is
# a BuildSlave object, specifying a unique slave name and password.  The same
# slave name and password must be configured on the slave.
from buildbot.buildslave import BuildSlave

nick        = "REDACT"
lin         = "REDACT"
ward        = "REDACT"
louise      = "REDACT"
lavanya     = "REDACT"
admins      = "REDACT"
sys_admins  = "REDACT"

samson   = BuildSlave("samson",   password, max_builds=4, notify_on_missing=admins)
pissarro = BuildSlave("pissarro", password, max_builds=4, notify_on_missing=nick)
amoy     = BuildSlave("amoy",     password, max_builds=4, notify_on_missing=lin)
erdos    = BuildSlave("erdos",    password, max_builds=3, notify_on_missing=[lavanya,nick])
ward     = BuildSlave("ward",     password, max_builds=3, notify_on_missing=ward)
hera     = BuildSlave("hera",     password, max_builds=3, notify_on_missing=louise)
lais     = BuildSlave("lais",     password, max_builds=1, notify_on_missing=nick)
warhol   = BuildSlave("warhol",   password, max_builds=1, notify_on_missing=admins)
eve      = BuildSlave("eve",      password, max_builds=1, notify_on_missing=sys_admins)
noland   = BuildSlave("noland",   password, max_builds=2, notify_on_missing=nick)
c['slaves'] = [ pissarro, samson, amoy, hera, ward, erdos, lais, eve, warhol, noland ]

# slave demarcations
test_conf_slaves  = ["samson", "amoy", "erdos", "pissarro", "noland" ]
test_cmds_slaves  = ["samson",         "erdos", "pissarro", "noland" ]
test_cost_slaves  = ["samson",         "erdos", "pissarro", "noland" ]
test_full_slaves  = ["samson",         "erdos", "pissarro", "noland" ]

test_spec_slaves  = [ "samson" ]

test_parallel_slaves = ["eve", "ward", "samson"]

# 'slavePortnum' defines the TCP port to listen on for connections from slaves.
# This must match the value configured into the buildslaves (with their
# --master option)
c['slavePortnum'] = master_port


###############################################################################
####### LOCK DEFINITIONS
from buildbot import locks

# Lock for parallel jobs -- maxCountForSlaves sets the number of process that
# can run on those slaves, 1 is the default, set by maxCount.
parallel_lock = locks.SlaveLock( "parallel_lock", maxCount = 1,
                            maxCountForSlave= { "ward" : 2, "samson" : 3 })


###############################################################################
####### COMMAND STEP ABSTRACTIONS
# These functions add a step to a configuration, this allows for a better
# abstract way to compose commands functionally.
from buildbot.process.factory import BuildFactory
from buildbot.steps.shell     import ShellCommand
from buildbot.steps.source    import Mercurial
from buildbot.steps.shell     import Compile
from buildbot.steps.shell     import Configure
from buildbot.steps.shell     import ShellCommand
from buildbot.config          import BuilderConfig

def configure( conf, configure_options ):
    configure_options.insert( 0, "./configure" )
    conf.addStep( Configure( command=configure_options, workdir="./build/src" ))
    return

def repo_purge( conf ):
    if( purge_repos ) :
        conf.addStep( ShellCommand( name="repo revert", description="hg revert",
                                    command=["hg", "revert", "--all"], workdir="./build/src" ))
#        conf.addStep( ShellCommand( name="repo xpurge", description="hg purge",
#                                    command=["hg", "st", "-un0", "|", "xargs", "-0", "rm"], workdir="./build/src" ))
#        conf.addStep( ShellCommand( name="repo purge", description="hg purge",
#                                    command=["hg", "purge"], workdir="./build/src" ))
    return

def repo_ci( conf, msg ):
    conf.addStep( ShellCommand( name="repo check in", description="repo check in", workdir="./build/src",
                                command=["hg","ci","-m",msg] ))
    return

def repo_push( conf ):
    conf.addStep( ShellCommand( name="repo push", description="repo push", workdir="./build/src",
                                command=["hg","push"]))
    return

def repo_update( conf ):
    repo = "ssh://REDACT@samson/black_sabbath"
    repository = Mercurial( repourl=repo, branchType='inrepo', defaultBranch='4_1_development', alwaysUseLatest=True )
    conf.addStep( repository )
    repo_purge(conf)
    return

def make_clean( conf ):
    conf.addStep( ShellCommand( name="make clean", description="make clean",
                                command=["make","clean"], workdir="./build/src" ))
    return

def build_top( conf ):
    conf.addStep( ShellCommand( name="make top", description="make top",
                                command=["make","poy.top"], workdir="./build/src" ))
    return

def build_byte( conf ):
    conf.addStep( ShellCommand( name="make byte", description="make byte",
                                command=["make","poy.byte"], workdir="./build/src" ))
    return

def build_docs( conf ):
    conf.addStep( ShellCommand( name="make docs", description="make docs",
                                command=["make","doc"], workdir="./build/src" ))
    return

def build_native( conf ):
    conf.addStep( ShellCommand( name="make native", description="make native",
                                command=["make","poy.native"], workdir="./build/src" ))
    return

def build_aux( conf ):
    confg.addStep( ShellCommand( name="make test_numerical", description="make test_numerical",
                                command=["ocamlbuild","test_numerical.native"], workdir="./build/src" ))
    confg.addStep( ShellCommand( name="make lk", description="make wards lk application",
                                command=["ocamlbuild","lk.native"], workdir="./build/src" ))
    return

def build_tester( conf ):
    conf.addStep( ShellCommand( name="make test native", description="make test native",
                                command=["make","poy_test.native"],workdir="./build/src", haltOnFailure=True))
    return

def move_tester( conf ):
    conf.addStep( ShellCommand( name="move test native", description="move test native", workdir="./build/src",
                                command=["cp","_build/poy_test.native","../test/poy_test.native"], haltOnFailure=True))
    return

def run_poy_script( conf, poy_script, directory ):
    conf.addStep( ShellCommand( name="run poy script", description="run poy script", workdir="./build/src",
                                command=["./_build/poy.native",poy_script,"-cwd",directory] ))
    return

def run_ocaml_script(conf, ocaml_script ):
    conf.addStep( ShellCommand( name="run ocaml script", description="run ocaml script", workdir="./build/src",
                                command=["./_build/poy.top","-I","_build/",ocaml_script] ))
    return

def run_parallel_poy_script( conf, poy_script, directory, processors ):
    conf.addStep( ShellCommand( name="run mpi script", description="run mpi script", workdir="./build/src",
                                command=["mpiexec", "-n", processors, "./_build/poy.native",poy_script,"-cwd",directory] ))
    return

def run_tester( conf, additional_arguments ):
    command=["ocaml", "unix.cma", "str.cma", "test_line.ml"]
    command.extend( additional_arguments )
    name = find_name( "-message", additional_arguments )
    conf.addStep( ShellCommand( workdir="./build/test", description=name, name=name,
                                command=command, timeout=tester_timeout ) )
    return

########################
####### SCRIPTS
# Here we present the scripts built from the builders and functions above

## run the scripts in testing mode
def build_tester_script_normal(name, configure_options, ocaml_scripts ):
    conf = BuildFactory()
    repo_update( conf )
    configure( conf, configure_options )
    make_clean( conf )
    build_tester( conf )
    move_tester( conf )
    for ocaml_script in ocaml_scripts:
        run_tester( conf, ocaml_script )
    return( conf )

## run the scripts, save output and commit changes
def build_tester_script_replace(name, configure_options, ocaml_scripts ):
    conf = BuildFactory()
    repo_update( conf )
    configure( conf, configure_options )
    make_clean( conf )
    build_tester( conf )
    move_tester( conf )
    for ocaml_script in ocaml_scripts:
        ocaml_script = replace_options( ocaml_script )
        run_tester( conf, ocaml_script )
    repo_ci( conf, "Updating test scripts for "+ name )
    repo_push( conf )
    return( conf )

## wrapper to avoid complicated scripts
def build_tester_script(name, configure_options, ocaml_scripts, debug ):
    if debug == 1:
        return( build_tester_script_replace(name, configure_options, ocaml_scripts ))
    else:
        return( build_tester_script_normal(name, configure_options, ocaml_scripts ))

def build_configure_script( configure_options ):
    conf = BuildFactory()
    repo_update( conf )
    configure( conf, configure_options )
    make_clean( conf )
    build_top( conf )
    build_byte( conf )
    build_native( conf )
    return(conf)

def build_configure_docs( configure_options ):
    conf = BuildFactory()
    repo_update( conf )
    configure( conf, configure_options )
    make_clean( conf )
    build_docs( conf )
    return conf

def build_poyscript_script( configure_options, command_script ):
    conf = BuildFactory()
    repo_update( conf )
    configure( conf, configure_options )
    make_clean( conf )
    build_native( conf )
    run_poy_script( conf, command_script, "./build/test" )
    return( conf )

def build_parallel_script( configure_options, parallel_script, processors ):
    conf = BuildFactory()
    repo_update( conf )
    configure( conf, configure_options )
    make_clean( conf )
    build_native( conf )
    run_parallel_poy_script( conf, command_script, "./build/test", 4 )
    return( conf )

########################
# Configuration Factory
config_options = [("large-alphabet config",     ["--enable-large-alphabet"]),
                  ("enable-unsafe operations",  ["--enable-unsafe"]),
                  ("enable-profiler operations",["--enable-profiler"]),
                  ("disable-likelihood config", ["--disable-likelihood"]),
                  ("enable-likelihood config",  ["--enable-likelihood"]),
                  ("long seq config",           ["--enable-long-sequences"]),
                  ("enable mpi config",         ["--enable-mpi", "CC=mpicc"]),
                  ("flat interface config",     ["--enable-interface=flat"]),
                  ("html interface config",     ["--enable-interface=html"]),
                  ("large messages config",     ["--enable-large-messages"]),
                  ("ncurses interface config",  ["--enable-interface=ncurses"]),
                  ("readline interface config", ["--enable-interface=readline"]),
#                 ("enable parmap",             ["--enable-parmap"]),
#                 ("enable concord config",     ["--enable-concord"]),
#                 ("disable concord config",    ["--disable-concord"]),
                  ("xslt config",               ["--enable-xslt"])
]

config_builders = []
config_factory_pairs = map(lambda (n,k): (n,build_configure_script(k)), config_options)

for config_factory_pair in config_factory_pairs:
    add_builder( config_factory_pair, test_conf_slaves, config_builders )

specific_factory_pairs = []
specific_factory_pairs.append( ("build documentation",build_configure_docs(["--enable-interface=flat"])) )

for specific_factory_pair in specific_factory_pairs:
    add_builder( specific_factory_pair, test_spec_slaves, config_builders )


########################
# Command Factory
accessory_scripts = [
    (["-command", "accessory/cd_pwd01.poy",  "-message", "'cd' and 'pwd' stderr" ]),
    (["-command", "accessory/clear_memory01.poy", "-message", "'clear_memory' with no arguments" ]),
    (["-command", "accessory/clear_memory02.poy", "-message", "'clear_memory' with all arguments" ]),
    (["-command", "accessory/echo01.poy",    "-message", "'echo' text output" ]),
    (["-command", "accessory/echo02.poy",    "-message", "'echo' to file" ]),
    (["-command", "accessory/echo03.poy",    "-message", "'echo' stdout" ]),
    (["-command", "accessory/echo04.poy",    "-message", "'echo' stderr and stdout" , "-stderr", "accessory/stderr/echo04.poy.err" , "-error" ]),
    (["-command", "accessory/exit01.poy",    "-message", "'exit', with arguments (Error expected)", "-error", ""]),
    (["-command", "accessory/exit02.poy",    "-message", "'exit', just checking if works" ]),
    (["-command", "accessory/help01.poy",    "-message", "'help', just checking if works" ]),
    (["-command", "accessory/quit01.poy",    "-message", "'quit' with arguments (ERROR expected)" , "-stderr", "accessory/stderr/quit01.poy.err" , "-error", "" ]),
    (["-command", "accessory/quit02.poy",    "-message", "'quit' just checking if works" ]),
    (["-command", "accessory/redraw01.poy",  "-message", "'redraw', just checking if works" ]),
    (["-command", "accessory/redraw02.poy",  "-message", "'redraw', with arguments (ERROR expected)", "-error", "" ]),
    (["-command", "accessory/run01.poy",     "-message", "'run' without argument, ERROR expected" , "-stderr", "accessory/stderr/run01.poy.err" , "-error", "" ]),
    (["-command", "accessory/run02.poy",     "-message", "'run' with script"]),
    (["-command", "accessory/rediagnose.poy","-message", "'rediagnose' test" , "-stderr", "accessory/stderr/rediagnose.poy.err" ]),
    (["-command", "accessory/rename01.poy",  "-message", "'rename' specifying a synonym file" , "-stdout", "accessory/stdout/rename01.poy.out" ]),
    (["-command", "accessory/rename02.poy",  "-message", "'rename' specifying a pair of synonyms" , "-stdout", "accessory/stdout/rename02.poy.out" ]),
    (["-command", "accessory/version01.poy", "-message", "'version'; just to see it if works"]),
    (["-command", "accessory/wipe01.poy",    "-message", "'wipe'; just to see if works" ]),
    (["-command", "accessory/wipe02.poy",    "-message", "'wipe' with loaded data" , "-stdout", "accessory/stderr/wipe02.poy.out"]),
    (["-command", "accessory/wipe03.poy",    "-message", "'wipe' with argument (ERROR expected)" , "-stderr", "accessory/stderr/wipe03.poy.err" , "-error", "" ]),
    # (["-command", "accessory/save_load_inspect.poy", "-message", "'save', 'load', 'inspect'" , "-stdout", "accessory/stderr/save_load_insepect.poy.out"]),
    (["-command", "set/set01.poy" , "-message", "'set' under defaults" ]),
    (["-command", "set/set02.poy" , "-message", "'set' history" ]),
    (["-command", "set/set03.poy" , "-message", "setting log"]),
    (["-command", "set/set04.poy" , "-message", "setting and verifying rooting" , "-diff", "set/tre/set04.tre" ]),
    (["-command", "set/set05.poy" , "-message", "test 'normal_do'" , "-diff", "set/xml/set05.poy.xml" ]),
    (["-command", "set/set06.poy" , "-message", "test 'exhaustive_do'" , "-diff", "set/xml/set06.poy.xml" ]),
    (["-command", "set/set07.poy" , "-message", "test 'exhaustive_do' then 'normal_do'" , "-diff", "set/xml/set07.poy.xml" ]),
    (["-command", "set/set08.poy" , "-message", "test 'iterative'" , "-diff", "set/xml/set08.poy.xml" ]),
    (["-command", "analyzer/ana.poy" , "-message", "Run script analyzer on a script", "-inputfile","./analyzer/ana_scripts","-stdout","FILENAME1_stdout_ref"])
]

select_scripts = [
    (["-command", "select/select01.poy", "-message", "'select' terminals using terminals file with identifiers", "-stdout", "select/stdout/select01.poy.out", "-stderr", "select/stderr/select01.poy.err" ]),
    (["-command", "select/select02.poy", "-message", "'select' terminals using terminals file without identifiers" , "-stderr", "select/stderr/select02.poy.err" , "-stdout", "select/stdout/select02.poy.out" ]),
    (["-command", "select/select03.poy", "-message", "'select' terminals based on missing data", "-stdout", "select/stdout/select03.poy.out", "-stderr", "select/stderr/select03.poy.err"]),
    (["-command", "select/select04.poy", "-message", "'select' terminals based on terminal names 1", "-stdout", "select/stdout/select04.poy.out", "-stderr", "select/stderr/select04.poy.err" ]),
    (["-command", "select/select05.poy", "-message", "'select' terminals based terminal names 2" , "-stderr", "select/stderr/select05.poy.err" , "-stdout", "select/stdout/select05.poy.out" ]),
    (["-command", "select/select06.poy", "-message", "'select' static homology", "-stdout", "select/stdout/select06.poy.out", "-stderr", "select/stderr/select06.poy.err" ]),
    (["-command", "select/select07.poy", "-message", "'select' default", "-stdout", "select/stdout/select07.poy.out", "-stderr", "select/stderr/select07.poy.err" ]),
    (["-command", "select/select08.poy", "-message", "'select' optimal trees" , "-stdout", "select/stdout/select08.poy.out" ]),
    (["-command", "select/select09.poy", "-message", "'select' best trees", "-stdout", "select/stdout/select09.poy.out", "-stderr", "select/stderr/select09.poy.err" ]),
    (["-command", "select/select10.poy", "-message", "'select' 0 trees = removing trees from memory" , "-stdout", "select/stdout/select10.poy.out" ]),
    (["-command", "select/select11.poy", "-message", "'select' more trees than available", "-stdout", "select/stdout/select11.poy.out", "-stderr", "select/stderr/select11.poy.err" ]),
    (["-command", "select/select12.poy", "-message", "'select' suboptimal trees" , "-stdout", "select/stdout/select12.poy.out" ]),
    (["-command", "select/select13.poy", "-message", "'select' decimal number of trees", "-error", "-stdout", "select/stdout/select13.poy.out", "-stderr", "select/stderr/select13.poy.err" ]),
    (["-command", "select/select14.poy", "-message", "'select' negative number of best trees; ERROR expected" , "-stderr", "select/stderr/select14.poy.err" , "-error", "" ]),
    (["-command", "select/select15.poy", "-message", "'select' unique trees of 20", "-stdout", "select/stdout/select15.poy.out", "-stderr", "select/stderr/select15.poy.err"]),
    (["-command", "select/select16.poy", "-message", "'select' random trees of 20", "-stdout", "select/stderr/select14.poy.err"])
]

build_scripts_io = [
    (["-command","./build/build7.poy", "-message", "Build with set seed for xml output "]),
    (["-command","./build/build9.poy", "-message", "Build with constraint "]),
    (["-command","./build/build.poy", "-message", "Build default "]),
    (["-command","./build/build12.poy", "-message", "Build with iterative "]),
    (["-command","./build/build6.poy", "-message", "Build with of_file "]),
    (["-command","./build/calcsup6.poy", "-message", "calculate_support with bremer build of file"]),
    (["-command","./build/calcsup10.poy", "-message", "calculate_support with jackknife without transform EXPECT ERROR", "-error"]),
    (["-command","./build/build4.poy", "-message", "Build specifying a negative number Expect Error", "-error"])
]
for build_script_io in build_scripts_io :
    add_stdcomparisons( build_script_io, True, True )

build_scripts = [
    (["-command","./build/build10.poy", "-message", "Build with random","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/build11.poy", "-message", "Build with randomized","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/build1.poy", "-message", "Build 1 Tree","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/build2.poy", "-message", "Build with as_is default","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/build3.poy", "-message", "Build with as_is 2tree","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/build5.poy", "-message", "Build with all ","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/build8.poy", "-message", "Build with branch and bound (1 trees) ","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup1.poy", "-message", "calculate_support with bootstrap builds","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup2.poy", "-message", "calculate_support with bootstrap build 0)","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup3.poy", "-message", "calculate_support with bremer default","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup4.poy", "-message", "calculate_support with bremer build trees:2", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup5.poy", "-message", "calculate_support with bremer swap trees:2", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup7.poy", "-message", "calculate_support with jackknife default","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup8.poy", "-message", "calculate_support with jackknife with resample 10", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./build/calcsup9.poy", "-message", "calculate_support with jackknife with remove 25", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"])
]
build_scripts.extend( build_scripts_io )

# commented out scripts with timeout
####(["-command","./swap/swap32.poy","-message", "'swap' under defaults with timeout"]),
####(["-command","./swap/swap33.poy","-message", "'swap' under defaults with timeout but not specifying seconds; ERROR EXPECTED and DETECTED", "-error"]),
####(["-command","./swap/swap34.poy","-message", "'swap' under defaults with timeout but negative seconds; ERROR EXPECTED and DETECTED", "-error"]),
swap_scripts_0 = [
    (["-command","./swap/swap01.poy","-message", "'swap' under defaults without build; ERROR expected", "-error"]),
    (["-command","./swap/swap09.poy","-message", "simulated annealing without specifying values; ERROR EXPECTED and DETECTED", "-error"]),
    (["-command","./swap/swap10.poy","-message", "simulated annealing without specifying values #2; ERROR EXPECTED and DETECTED", "-error"]),
    (["-command","./swap/swap13.poy","-message", "tree drifting without specifying values; Expect Error","-error"]),
    (["-command","./swap/swap14.poy","-message", "tree drifting without specifying values; ERROR expected","-error"]),
    (["-command","./swap/swap25.poy","-message", "sectorial search specifying float instead of integer value; ERROR EXPECTED", "-error"]),
    (["-command","./swap/swap26.poy","-message", "sectorial search specifying negative integer value; ERROR DETECTED", "-error"]),
    (["-command","./swap/swap29.poy","-message", "'swap' under 'bfs' with negative integer value; ERROR EXPECTED", "-error"]),
    (["-command","./swap/swap30.poy","-message", "'swap' under 'bfs' with float value; ERROR DETECTED", "-error"]),
    (["-command","./swap/swap35.poy","-message", "'swap' and printing intermediate trees"]),
    (["-command","./swap/swap38.poy","-message", "'swap' evaluating suboptimal trees specified by negative number; ERROR EXPECTED and DETECTED", "-error"]),
    (["-command","./swap/swap40.poy","-message", "'swap' and specifying the number of trees to retain by float; ERROR EXPECTED and DETECTED", "-error"]),
    (["-command","./swap/swap41.poy","-message", "'swap' and specifying the number of trees to retain by negative number; ERROR EXPECTED and DETECTED", "-error"]),
    (["-command","./swap/swap43.poy","-message", "'swap' and outputting visited trees"])
]
swap_scripts_1 = [
    (["-command","./swap/swap02.poy","-message", "'swap' under defaults", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap06.poy","-message", "'swap' with 'tbr' and 'spr' under 'once'","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap15.poy","-message", "'swap' with 'alternate' and braking edge once","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap23.poy","-message", "sectorial search without specifying value","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap27.poy","-message", "'swap' under 'bfs' under default","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap37.poy","-message", "'swap' evaluating suboptimal trees specified by float","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap44.poy","-message", "'swap' under imported constraint tree with specified 'depth'","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"])
]
swap_scripts_2 = [
    (["-command","./swap/swap03.poy","-message", "'swap' with 'alternate'", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap07.poy","-message", "'swap' default under 'around' trajectory","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap16.poy","-message", "'swap' with 'tbr' and random braking edge","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap22.poy","-message", "'swap' using all join positions","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap28.poy","-message", "'swap' under 'bfs' with integer value","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap39.poy","-message", "'swap' and specifying the number of trees to retain"]),
    (["-command","./swap/swap42.poy","-message", "'swap' argument combination #1","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"])
]
swap_scripts_3 = [
    (["-command","./swap/swap04.poy","-message", "'swap' with 'spr'", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap08.poy","-message", "alternate 'swap' under 'around' trajectory","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap17.poy","-message", "'swap' with 'spr' and length-dependent edge braking","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap24.poy","-message", "sectorial search","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap36.poy","-message", "'swap' evaluating suboptimal trees specified by integer","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap31.poy","-message", "'swap' with 'alternate' under 'bfs'","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"])
]
swap_scripts_4 = [
    (["-command","./swap/swap05.poy","-message", "'swap' with 'tbr'", "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap11.poy","-message", "simulated annealing","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap12.poy","-message", "'swap' with drifting"]),
    (["-command","./swap/swap18.poy","-message", "'swap' under default constraint","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap19.poy","-message", "'swap' under imported constraint tree","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command","./swap/swap20.poy","-message", "'swap' under imported constraint tree with specified 'depth'","-inputfile", "./fas"]),
    (["-command","./swap/swap21.poy","-message", "'swap' under under default with shorthand 'depth' specification","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
]
for sw_script in swap_scripts_0 :
    add_stdcomparisons( sw_script, False, True )

swap_static_scripts = [
	(["-command", "./swap_static/swap_static01.poy","-message", "'swap' under defaults without build; ERROR expected"]),
	(["-command", "./swap_static/swap_static02.poy","-message", "'swap' under defaults"]),
	(["-command", "./swap_static/swap_static03.poy","-message", "'swap' with 'alternate'"]),
	(["-command", "./swap_static/swap_static04.poy","-message", "'swap' with 'spr'"]),
	(["-command", "./swap_static/swap_static05.poy","-message", "'swap' with 'tbr'"]),
	(["-command", "./swap_static/swap_static06.poy","-message", "'swap' with 'tbr' and 'spr' under 'once'"]),
	(["-command", "./swap_static/swap_static07.poy","-message", "'swap' default under 'around' trajectory"]),
	(["-command", "./swap_static/swap_static08.poy","-message", "alternate 'swap' under 'around' trajectory"]),
	(["-command", "./swap_static/swap_static09.poy","-message", "simulated annealing without specifying values; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static10.poy","-message", "simulated annealing without specifying values #2; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static11.poy","-message", "simulated annealing"]),
	(["-command", "./swap_static/swap_static12.poy","-message", "tree drifting; static homology characters only"]),
	(["-command", "./swap_static/swap_static13.poy","-message", "tree drifting without specifying values; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static14.poy","-message", "tree drifting without specifying values; ERROR expected", "-error"]),
	(["-command", "./swap_static/swap_static15.poy","-message", "'swap' with 'alternate' and braking edge once"]),
	(["-command", "./swap_static/swap_static16.poy","-message", "'swap' with 'tbr' and random braking edge"]),
	(["-command", "./swap_static/swap_static17.poy","-message", "'swap' with 'spr' and length-dependent edge braking"]),
	(["-command", "./swap_static/swap_static18.poy","-message", "'swap' under default constraint"]),
	(["-command", "./swap_static/swap_static19.poy","-message", "'swap' under imported constraint tree"]),
	(["-command", "./swap_static/swap_static20.poy","-message", "'swap' under imported constraint tree with specified 'depth'"]),
	(["-command", "./swap_static/swap_static21.poy","-message", "'swap' under under default with shorthand 'depth' specification"]),
	(["-command", "./swap_static/swap_static22.poy","-message", "'swap' using all join positions"]),
	(["-command", "./swap_static/swap_static23.poy","-message", "sectorial search without specifying value"]),
	(["-command", "./swap_static/swap_static24.poy","-message", "sectorial search"]),
	(["-command", "./swap_static/swap_static25.poy","-message", "sectorial search specifying float instead of integer value; ERROR EXPECTED", "-error"]),
	(["-command", "./swap_static/swap_static26.poy","-message", "sectorial search specifying negative integer value; ERROR DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static27.poy","-message", "'swap' under 'bfs' under default"]),
	(["-command", "./swap_static/swap_static28.poy","-message", "'swap' under 'bfs' with integer value"]),
	(["-command", "./swap_static/swap_static29.poy","-message", "'swap' under 'bfs' with negative integer value; ERROR EXPECTED", "-error"]),
	(["-command", "./swap_static/swap_static30.poy","-message", "'swap' under 'bfs' with float value; ERROR DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static31.poy","-message", "'swap' with 'alternate' under 'bfs'"]),
	(["-command", "./swap_static/swap_static32.poy","-message", "'swap' under defaults with timeout", "-timer"]),
	(["-command", "./swap_static/swap_static33.poy","-message", "'swap' under defaults with timeout but not specifying seconds; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static34.poy","-message", "'swap' under defaults with timeout but negative seconds; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static35.poy","-message", "'swap' and printing intermediate trees"]),
	(["-command", "./swap_static/swap_static36.poy","-message", "'swap' evaluating suboptimal trees specified by integer"]),
	(["-command", "./swap_static/swap_static37.poy","-message", "'swap' evaluating suboptimal trees specified by float"]),
	(["-command", "./swap_static/swap_static38.poy","-message", "'swap' evaluating suboptimal trees specified by negative number; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static39.poy","-message", "'swap' and specifying the number of trees to retain; static homology characters only "]),
	(["-command", "./swap_static/swap_static40.poy","-message", "'swap' and specifying the number of trees to retain by float; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static41.poy","-message", "'swap' and specifying the number of trees to retain by negative number; ERROR EXPECTED and DETECTED", "-error"]),
	(["-command", "./swap_static/swap_static42.poy","-message", "'swap' argument combination #1"]),
	(["-command", "./swap_static/swap_static43.poy","-message", "'swap' and outputting visited trees", "-stdout", "./swap_static/stdout/swap_static43.poy.out"]),
	(["-command", "./swap_static/swap_static44.poy","-message", "'swap' under imported constraint tree with specified 'depth'"])
]
for sw_script in swap_static_scripts :
    add_stdcomparisons( sw_script, False, True )

report_cmds_scripts = [
    (["-message", "Build report" , "-command", "./report/report.poy" , "-stdout", "./report/stdout/report.out" ]),
    (["-message", "Build report diagnosis" , "-command", "./report/report1.poy" , "-stdout", "./report/stdout/report1.out" ]),
    (["-message", "Build report cross_references" , "-command", "./report/report2.poy" , "-stdout", "./report/stdout/report2.out" ]),
    (["-message", "Build report cross_references: names" , "-command", "./report/report3.poy" , "-stdout", "./report/stdout/report3.out" ]),
    (["-message", "Build report with data" , "-command", "./report/report4.poy" ]),
    (["-message", "Build report with terminals" , "-command", "./report/report6.poy" ]),
    (["-message", "Build report with treestats" , "-command", "./report/report7.poy" ]),
    (["-message", "Build report clades", "-command", "./report/report10.poy" , "-stdout", "./report/stdout/report10.out"]),
    (["-message", "Build report terminals" , "-command", "./report/report24.poy" , "-stdout", "./report/stdout/report24.out" ]),
    (["-message", "Build report implied alignments" , "-command", "./report/report33.poy" , "-stdout", "./report/stdout/report33.out" ]),
    (["-message", "Build report implied alignments (alt)" , "-command", "./report/report34.poy" , "-stdout", "./report/stdout/report34.out" ]),
    (["-message", "Build report implied alignments to file" , "-command", "./report/report36.poy" , "-diff", "./report/xml/report36.poy.xml" ]),
    (["-message", "Build and report timer to file" , "-command", "./report/report38.poy" , "-stdout", "./report/stdout/report38.out" ]),
    (["-message", "Build, transform using static_approx, and report phatwinclad" , "-command", "./report/report39.poy" , "-stdout", "./report/stdout/report39.out" ]),
    (["-message", "Build and report diagnosis" , "-command", "./report/report40.poy" , "-stdout", "./report/stdout/report40.out" ]),
    (["-message", "Build and report diagnosis to file" , "-command", "./report/report41.poy" , "-stdout", "./report/stdout/report41.out", "-stderr", "./report/stderr/report41.poy.err" ]),
    (["-message", "Build, transform and report memory" , "-command", "./report/report44.poy" ]),
    (["-message", "Build and report as a phatwinclad" , "-command", "./report/report46.poy" , "-stdout", "./report/stdout/report46.out" ]),
    (["-message", "Build, Transform and Report timer (no stdout compare)" , "-command", "./report/report47.poy" ]),
    (["-message", "Check xml output custom alphabet" , "-command", "./report/report42.poy" ]),
    (["-message", "Check xml output of sankoff character" , "-command", "./report/report35.poy" ])
]

report_tree_scripts = [
    (["-message", "Build report trees" , "-command", "./report/report8.poy" ]),
    (["-message", "Build report asciitrees", "-command", "./report/report9.poy" ]),
    (["-message", "Build 3 trees with fuse and report consensus with integer44 Expect under 50 Error" , "-command", "./report/report12.poy" , "-stderr", "./report/stderr/report12.err" , "-error", "" ]),
    (["-message", "Build 3 trees with graphconsensus" , "-command", "./report/report13.poy" , "-stdout", "./report/stdout/report13.out" ]),
    (["-message", "Build 3 trees with graphconsensus to a file with 88" , "-command", "./report/report14.poy" , "-stdout", "./report/stdout/report14.out" ]),
    (["-message", "Build 3 trees with graphconsensus to file with 44; Error expected" , "-command", "./report/report15.poy", "-error", "" ]),
    (["-message", "Build 3 trees with graphconsensus to file" , "-command", "./report/report16.poy" , "-stdout", "./report/stdout/report16.out" ]),
    (["-message", "Build 3 trees with graphsupports for jackknife" , "-command", "./report/report17.poy" , "-stdout", "./report/stdout/report17.out" ]),
    (["-message", "Build 3 trees with graphsupports for jackknife" , "-command", "./report/report18.poy" , "-stdout", "./report/stdout/report18.out" ]),
    (["-message", "Build 3 trees with graphsupports for bootstrap" , "-command", "./report/report19.poy" , "-stderr", "./report/stderr/report19.poy.err", "-stdout", "./report/stdout/report19.out" ]),
    (["-message", "Build 3 trees with graphsupports for static approx and bremer supports" , "-command", "./report/report20.poy" ]),
    (["-message", "Build 3 trees with graphsupports for bremer supports" , "-command", "./report/report21.poy" ]),
    (["-message", "Build 3 trees with graphsupports for bremer supports to file" , "-command", "./report/report22.poy" ]),
    (["-message", "Build 3 trees with graphsupports" , "-command", "./report/report23.poy" ]),
    (["-message", "Build report trees with total" , "-command", "./report/report25.poy" , "-stdout", "./report/stdout/report25.out" ]),
    (["-message", "Build report trees with hennig" , "-command", "./report/report26.poy" , "-stdout", "./report/stdout/report26.out" ]),
    (["-message", "Build report trees with newick" , "-command", "./report/report27.poy" , "-stdout", "./report/stdout/report27.out" ]),
    (["-message", "Build report trees with _cost" , "-command", "./report/report28.poy" , "-stdout", "./report/stdout/report28.out" ]),
    (["-message", "Build report trees: margin 1" , "-command", "./report/report29.poy" , "-stdout", "./report/stdout/report29.out" ]),
    (["-message", "Build report trees: no margin" , "-command", "./report/report30.poy" , "-stdout", "./report/stdout/report30.out" ]),
    (["-message", "Build report trees: collapse" , "-command", "./report/report31.poy" , "-stdout", "./report/stdout/report31.out" ]),
    (["-message", "Build report trees: collapse false" , "-command", "./report/report32.poy" , "-stdout", "./report/stdout/report32.out" ]),
    (["-message", "Build report trees" , "-command", "./report/report5.poy", "-stdout", "./report/stdout/report5.out" ]),
    (["-message", "Build report trees" , "-command", "./report/report11.poy", "-stdout", "./report/stdout/report11.out" ]),
    (["-message", "Build report trees" , "-command", "./report/report37.poy", "-stdout", "./report/stdout/report37.out" ])
]

likelihood_report_scripts = [
    (["-message", "Report static model" ,        "-command", "./report/report48.poy"]),
    (["-message", "Report static trees branches","-command", "./report/report49.poy"]),
    (["-message", "Report static diagnosis",     "-command", "./report/report50.poy"]),
    (["-message", "Report dynamic diagnosis",    "-command", "./report/report51.poy"]),
    (["-message", "Report dynamic model",        "-command", "./report/report52.poy"])
]

static_likelihood_scripts = [
    (["-message", "Static [e]Likelihood - Build, Transform (1 file, 3args)", "-command","./likelihood/likelihood-00.poy", "-inputfile","./align_fas", "-inputfile", "./likelihood/likelihood", "-inputfile","./likelihood/models", "-inputfile","./likelihood/cost", "-inputfile","./likelihood/gap"]),
    (["-message", "Static [e]Likelihood w/ gamma - Build, Transform (1file, 3args)", "-command","./likelihood/likelihood-02.poy", "-inputfile","./align_fas", "-inputfile", "./likelihood/likelihood", "-inputfile","./likelihood/models", "-inputfile","./likelihood/cost", "-inputfile","./likelihood/gap"]),
    (["-message", "Static [e]Likelihood w/ odd tcm- Build, Transform (1file,4args)", "-command","./likelihood/likelihood-03.poy", "-inputfile","./align_fas", "-inputfile","./likelihood/likelihood", "-inputfile","./likelihood/models", "-inputfile","./likelihood/cost", "-inputfile","./likelihood/gap"]),
    (["-message", "Read and confirm YANG.NEX and full diagnosis (0 args)", "-command","./likelihood/likelihood-05.poy"]),
    (["-message", "Static No Common Mechanism (NCM) Build and Search - (1files,1args)", "-command", "./likelihood/likelihood-07.poy", "-inputfile","./align_fas"]),
    (["-message", "Static Fasta, Multiple-TCM, Likelihood - Build, Transform (1file)", "-command","./likelihood/likelihood-09.poy", "-inputfile","./align_fas"]),
    (["-message", "Static Fasta, Multiple-TCM, Likelihood - Build, Transform (1file)", "-command","./likelihood/likelihood-18.poy", "-inputfile","./align_fas"]),
    (["-message", "Static Likelihood Bremer Support Test - Pre-Built, Transform (0args)", "-command", "./likelihood/likelihood-10.poy"]),
    (["-message", "Static Likelihood Model Selection - Build, Transform (1file)", "-command","./likelihood/likelihood-11.poy", "-inputfile","./align_fas"]),
    (["-message", "Static likelihood Searcg - Build, Transform (1file), swap", "-command","./likelihood/likelihood-15.poy", "-inputfile","./align_fas"]),
    (["-message", "Static likelihood Topology Test - Build, Transform (1file,1arg), swap", "-command","./likelihood/likelihood-16.poy", "-inputfile","./align_fas", "-inputfile","./likelihood/support"]),
    (["-message", "Static likelihood Topology Test - Build, Transform (1file,1arg), swap", "-command","./likelihood/likelihood-17.poy", "-inputfile","./align_fas", "-inputfile","./likelihood/support"])
]

dynamic_likelihood_scripts = [
    (["-message", "Dynamic Likelihood Search - Build, Transform (1files,2args)", "-command", "./likelihood/likelihood-04.poy", "-inputfile","./align_fas","-inputfile","./likelihood/models", "-inputfile", "./likelihood/dyngap"]),
    (["-message", "Dynamic Likelihood Model Selection - Build, Transform (1file,1arg)", "-command","./likelihood/likelihood-12.poy", "-inputfile","./fas", "-inputfile", "./likelihood/dyngap"]),
]

mixxed_likelihood_scripts = [
    (["-message", "Mixed Likelihood Search - Optimize Path and Threshold(1.3) - (1files,3args)", "-command", "./likelihood/likelihood-06.poy", "-inputfile","./fas", "-inputfile","./align_fas"]),
    (["-message", "Mixed Likelihood and NCM Build - (2files,0args)", "-command", "./likelihood/likelihood-08.poy", "-inputfile","./align_fas","-inputfile","./fas"]),
    (["-message", "Mixed Likelihood Model Selection 2Steps - Build, Transform (2file)", "-command","./likelihood/likelihood-13.poy", "-inputfile","./align_fas", "-inputfile", "./fas"]),
    (["-message", "Mixed Likelihood Model Selection 1Step - Build, Transform (2file)", "-command","./likelihood/likelihood-14.poy", "-inputfile","./align_fas", "-inputfile", "./fas"]),
    (["-message", "Mixed [e]Likelihood one model - Build, Transform (2files, 1args)","-command","./likelihood/likelihood-01.poy", "-inputfile","./align_fas", "-inputfile","./fas", "-inputfile","./likelihood/likelihood","-inputfile","./likelihood/models"]),
]

static_likelihood_scripts.extend( likelihood_report_scripts )
dynamic_likelihood_scripts.extend( mixxed_likelihood_scripts )

#for lk_script in static_likelihood_scripts:
#    add_stdcomparisons( lk_script, False, True )

#for lk_script in dynamic_likelihood_scripts:
#    add_stdcomparisons( lk_script, False, True )



perturb_scripts = [
    (["-command", "perturb/perturb01.poy", "-message", "'perturb' defaults, builds" , "-stderr", "perturb/stderr/perturb01.poy.err" ]),
    (["-command", "perturb/perturb02.poy", "-message", "'perturb' defaults, no builds, warning expected" , "-stderr", "perturb/stderr/perturb02.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb03.poy", "-message", "'perturb' defaults, builds, static approx, swap" , "-stderr", "perturb/stderr/perturb03.poy.err" ]),
    (["-command", "perturb/perturb04.poy", "-message", "'perturb' with integer argument and 'build'; ERROR expected" , "-stderr", "perturb/stderr/perturb04.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb05.poy", "-message", "'perturb' with 5 iterations" , "-stderr", "perturb/stderr/perturb05.poy.err"]),
    (["-command", "perturb/perturb06.poy", "-message", "'perturb' with negative number of iterations; ERROR expected" , "-stderr", "perturb/stderr/perturb06.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb07.poy", "-message", "'perturb' with float number of iterations; ERROR expected" , "-stderr", "perturb/stderr/perturb07.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb08.poy", "-message", "'perturb' with default 'ratchet' for fas, ss, and aa data" , "-stderr", "perturb/stderr/perturb08.poy.err" ]),
    (["-command", "perturb/perturb09.poy", "-message", "'perturb' 'ratchet' for fas, ss, and aa data w/ empty arguments; ERROR expected" , "-stderr", "perturb/stderr/perturb09.poy.err", "-error", "" ]),
    (["-command", "perturb/perturb10.poy", "-message", "default 'perturb' with 'build' and multiple 'swap' arguments for fas, aa" , "-stderr", "perturb/stderr/perturb10.poy.err" ]),
    (["-command", "perturb/perturb11.poy", "-message", "default 'perturb' with 'build' and multiple 'swap' arguments for fas, ss, aa" , "-stderr", "perturb/stderr/perturb11.poy.err" ]),
    (["-command", "perturb/perturb12.poy", "-message", "default 'perturb' with 'ratchet' and arguments for fas, ss, aa" , "-stderr", "perturb/stderr/perturb12.poy.err" ]),
    (["-command", "perturb/perturb13.poy", "-message", "'perturb' using 'ratchet' with reversed order of float and integer values; ERROR expected" , "-stderr", "perturb/stderr/perturb13.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb14.poy", "-message", "'perturb' using 'ratchet' with two integer values; ERROR expected" , "-stderr", "perturb/stderr/perturb14.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb15.poy", "-message", "'perturb' using 'ratchet' with float values, ERROR expected" , "-stderr", "perturb/stderr/perturb15.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb16.poy", "-message", "'perturb' using 'ratchet' with negative values, ERROR expected" , "-stderr", "perturb/stderr/perturb16.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb17.poy", "-message", "'perturb' using 'ratchet' with negative integer value, ERROR expected" , "-stderr", "perturb/stderr/perturb17.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb18.poy", "-message", "'perturb' using 'resample' with no arguments; ERROR expected" , "-stderr", "perturb/stderr/perturb18.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb19.poy", "-message", "'perturb' using 'resample' under default, ERROR expected" , "-stderr", "perturb/stderr/perturb19.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb20.poy", "-message", "'perturb' using 'ratchet, with swap arguments", "-stderr", "perturb/stderr/perturb20.poy.err"]),
    (["-command", "perturb/perturb21.poy", "-message", "default 'perturb' with specified swap, ratchet and iterations values and multiple 'swap' arguments for fas, ss, and aa"]),
    (["-command", "perturb/perturb22.poy", "-message", "default 'perturb' with specified swap, ratchet, iterations, and transform values and multiple 'swap' arguments" , "-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command", "perturb/perturb23.poy", "-message", "'pertrub' with 'resample' with empty arguments; Error expected and detected", "-stderr", "perturb/stderr/perturb23.poy.err", "-error", ""]),
    (["-command", "perturb/perturb24.poy", "-message", "'perturb' with resample without lident value; Error expected" , "-stderr", "perturb/stderr/perturb24.poy.err","-error", ""]),
    (["-command", "perturb/perturb26.poy", "-message", "'perturb' with 'resample' specifying values" , "-stderr", "perturb/stderr/perturb26.poy.err"]),
    (["-command", "perturb/perturb27.poy", "-message", "'perturb' using 'resample' with values in reverse order, ERROR expected" , "-stderr", "perturb/stderr/perturb27.poy.err" , "-error", "" ]),
    (["-command", "perturb/perturb28.poy", "-message", "'perturb' using 'resample' and 'swap' with specified values" , "-stderr", "perturb/stderr/FILENAME1_FILENAME2_FILENAME3.perturb28.poy.err","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command", "perturb/perturb29.poy", "-message", "'perturb' using 'iterations', 'resample', and 'swap' with specified values" , "-stderr", "perturb/stderr/FILENAME1_FILENAME2_FILENAME3.perturb29.poy.err","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command", "perturb/perturb30.poy", "-message", "'perturb' using 'iterations', 'resample', 'transform' and 'swap'" , "-stderr", "perturb/stderr/FILENAME1_FILENAME2_FILENAME3.perturb30.poy.err","-inputfile", "./fas", "-inputfile", "./ss", "-inputfile", "./aa"]),
    (["-command", "perturb/perturb31.poy", "-message", "simple build and perturb with multiple dynamic characters" , "-stderr", "perturb/stderr/perturb31.poy.err"]),
    (["-command", "perturb/perturb32.poy", "-message", "default perturb with build and swap under static approx combined (dna + morph)" , "-inputfile", "./fas", "-inputfile", "./ss"])
]

perturb_static_scripts = [
    (["-command", "./perturb_static/perturb_static01.poy", "-message", "simple 'build' and 'perturb' with static characters only"]),
    (["-command", "./perturb_static/perturb_static02.poy", "-message", "executing 'perturb' under defaults without prior builds; SHOULD ISSUE WARNING THAT TREES ARE NOT LOADED; static characters only" ]),
    (["-command", "./perturb_static/perturb_static03.poy", "-message", "default 'perturb' with 'build' and default 'swap'; static characters only; static characters only"]),
    (["-command", "./perturb_static/perturb_static04.poy", "-error", "-message", "perturb with integer argument; with 'build'; ERROR expected and correctly detected; static characters only" ]),
    (["-command", "./perturb_static/perturb_static05.poy", "-message", "perturb with specified iterations #; with 'build'; static characters only" ]),
    (["-command", "./perturb_static/perturb_static06.poy", "-error", "-message", "'perturb' with negative number of iterations; ERROR EXPECTED and DETECTED; static characters only"]),
    (["-command", "./perturb_static/perturb_static07.poy", "-error", "-message", "'perturb' with decimal number of iterations; ERROR EXPECTED and DETECTED; static characters only" ]),
    (["-command", "./perturb_static/perturb_static08.poy", "-message", "'perturb' with default 'ratchet' without :(); static characters only" ]),
    (["-command", "./perturb_static/perturb_static09.poy", "-error", "-message", "'perturb' with default 'ratchet'; ERROR EXPECTED and DETECTED; static characters only" ]),
    (["-command", "./perturb_static/perturb_static10.poy", "-message", "default 'perturb' with 'build' and 'swap' under 'static_approx' combinded using nucleotide and aa data; static characters only" ]),
    (["-command", "./perturb_static/perturb_static11.poy", "-message", "default 'perturb' with 'build' and multiple 'swap' arguments; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static12.poy", "-message", "'perturb' using 'ratchet' with specified values; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static13.poy", "-error", "-message", "'perturb' using 'ratchet' with reversed order of float and integer values; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static14.poy", "-error", "-message", "'perturb' using 'ratchet' with integer values; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static15.poy", "-error", "-message", "'perturb' using 'ratchet' with float values; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static16.poy", "-error", "-message", "'perturb' using 'ratchet' with negative float value; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static17.poy", "-error", "-message", "'perturb' using 'ratchet' with negative integer value; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static18.poy", "-error", "-message", "'perturb' using 'resample' under default; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static19.poy", "-error", "-message", "'perturb' using 'resample' under default #2; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static20.poy", "-message", "default 'perturb' with specified values and multiple 'swap' arguments; static characters only" ]),
    (["-command", "./perturb_static/perturb_static21.poy", "-message", "default 'perturb' with specified swap, ratchet and iterations values and multiple 'swap' arguments; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static22.poy", "-message", "default 'perturb' with specified swap, ratchet, iterations, and transform values and multiple 'swap' arguments; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static23.poy", "-error", "-message", "'perturb' using 'resample' under default #2; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static24.poy", "-error", "-message", "'perturb' using 'resample' without specifying lident value; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static26.poy", "-message", "'perturb' using 'resample' with specifying values #1; static characters only"]),
    (["-command", "./perturb_static/perturb_static27.poy", "-error", "-message", "'perturb' using 'resample' with specifying values in reverse order; ERROR EXPECTED and DETECTED; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static28.poy", "-message", "'perturb' using 'resample' and 'swap' with specified values; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static29.poy", "-message", "'perturb' using 'iterations', 'resample', and 'swap' with specified values; static characters only"  ]),
    (["-command", "./perturb_static/perturb_static30.poy", "-message", "'perturb' using 'iterations', 'resample', 'transform', and 'swap' with specified values; static characters only"]),  
    (["-command", "./perturb_static/perturb_static31.poy", "-message", "simple 'build' and 'perturb' with multiple dynamic homology characters; INCLUDE MULTIPLE fas FILES; static characters only"]),
    (["-command", "./perturb_static/perturb_static32.poy", "-message", "default 'perturb' with 'build' and 'swap' under 'static_approx' combinded using nucleotide and morph data; static characters only"])
]
# Issues here with timing; AMOY seems to produce different scores.
#for ps_script in perturb_static_scripts :
#    add_stdcomparisons( ps_script, False, True )

# These search scripts are timed, so we cannot compare output
search_scripts = [
    (["-command", "search/search01.poy", "-message", "'search' under defaults without reading data files; expect error"]),
    (["-command", "search/search02.poy", "-message", "'search' under defaults, max_time:0:0:20"]),
    (["-command", "search/search03.poy", "-message", "'search' max_time:0:0:05"]),
    (["-command", "search/search04.poy", "-message", "'search' with memory:mb:800, max_time:0:0:10"]),
    (["-command", "search/search05.poy", "-message", "'search' with min_time:0:0:15, max_time:0:0:17"]),
    (["-command", "search/search06.poy", "-message", "'search' with 'hits:5', max_time:0:0:20"]),
    (["-command", "search/search07.poy", "-message", "'search' target_cost:4300, max_time:0:0:10"]),
    (["-command", "search/search08.poy", "-message", "'search' with max_time:0:0:15, min_time:0:0:5"]),
    (["-command", "search/search09.poy", "-message", "'search' with hits:5, max_time:0:0:15"]),
    (["-command", "search/search10.poy", "-message", "'search' max_time:0:015"]),
    (["-command", "search_static/search_static01.poy", "-message", "'search' under defaults without reading data files; expect error", "-error"]),
    (["-command", "search_static/search_static02.poy", "-message", "'search' under defaults; static homology characters only"]),
    (["-command", "search_static/search_static03.poy", "-message", "'search' max_time:0:0:05; static homology characters only "]),
    (["-command", "search_static/search_static04.poy", "-message", "'search' with memory:mb:800, static homology characters only"]),
    (["-command", "search_static/search_static05.poy", "-message", "'search' with min_time:0:0:15 argument; static homology characters only"]),
    (["-command", "search_static/search_static06.poy", "-message", "'search' with 'hits:25'; static homology characters only "]),
    (["-command", "search_static/search_static07.poy", "-message", "'search' target_cost:4300; static homology characters only"]),
    (["-command", "search_static/search_static08.poy", "-message", "'search' with max_time:0:0:15, min_time:0:0:5; static homology characters only"]),
    (["-command", "search_static/search_static09.poy", "-message", "'search' with hits:5, max_time:0:0:25 ; static homology characters only"]),
    (["-command", "search_static/search_static10.poy", "-message", "'search' max_time:0:015'; static homology characters only"])
]

fuse_scripts = [
    (["-message", "test build 2 trees and default fuse" , "-command", "./fuse/fuse.poy"]),
    (["-message", "test build 3 trees and fuse keep 2" , "-command", "./fuse/fuse1.poy" ]),
    (["-message", "test no build trees and fuse; error expected" , "-command", "./fuse/fuse2.poy", "-error", "" ]),
    (["-message", "Fuse from read tree files without data file Expext error could not find data fuse3.poy" , "-command", "./fuse/fuse3.poy", "-error"]),
    (["-message", "test build and fuse with swap" , "-command", "./fuse/fuse4.poy" ]),
    (["-message", "test build and fuse with 10 iterations" , "-command", "./fuse/fuse5.poy" ]),
    (["-message", "test build and fuse with float iterations; error expected" , "-command", "./fuse/fuse6.poy", "-error", "" ]),
    (["-message", "Fuse with a float keep, Expect Error" , "-command", "./fuse/fuse7.poy", "-error"]),
    (["-message", "test fuse with better replacement" , "-command", "./fuse/fuse8.poy" ]),
    (["-message", "test build and fuse with a spr swap" , "-command", "./fuse/fuse10.poy" ]),
    (["-message", "test build and fuse with a constraint swap" , "-command", "./fuse/fuse11.poy" ]),
    (["-message", "test fuse swap with swap around" , "-command", "./fuse/fuse12.poy" ]),
    (["-message", "test fuse swap with tbr swap" , "-command", "./fuse/fuse13.poy" ]),
    (["-message", "test fuse with swap threshold 5" , "-command", "./fuse/fuse14.poy" ]),
    (["-message", "test build and fuse with a nice swap (has timeout)" , "-command", "./fuse/fuse9.poy", "-timer" ])
]

for fuse_script in fuse_scripts :
    add_stdcomparisons( fuse_script, False, True )


transform_scripts = [
    (["-message", "Transform fas,ss,aa with tcm(4,2)", "-command", "./transform/transform.poy" , "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform.err" ]),
    (["-message", "Transform fas,ss,aa with gap-opening 1", "-command", "./transform/transform1.poy", "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform1.err" ]),
    (["-message", "Transform fas,ss,aa with auto-static-approx", "-command", "./transform/transform2.poy", "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform2.err" ]),
    (["-message", "Transform fas with auto_sequence_partition" , "-command", "./transform/transform6.poy" , "-inputfile", "fas" , "-stderr", "./transform/stderr/FILENAME1.transform6.err" ]),
    (["-message", "Transform fas with fixedstates", "-command", "./transform/transform7.poy" , "-inputfile", "fas" , "-stdout", "./transform/stdout/FILENAME1.transform7.stdout" ]),
    (["-message", "Transform fas,ss,aa with gap-opening 3", "-command", "./transform/transform8.poy", "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform8.err" ]),
    (["-message", "Transform fas,ss,aa with multi_static_approx" , "-command", "./transform/transform9.poy" , "-inputfile", "fas" , "-stderr", "./transform/stderr/FILENAME1.transform9.err" ]),
#   (["-message", "Transform fas,ss,aa with tcm(1,1), prealigned", "-command", "./transform/transform10.poy", "-inputfile", "align_fas" , "-inputfile", "ss" , "-inputfile", "align_aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform10.err" ]),
    (["-message", "Transform fas static_approx", "-command", "./transform/transform11.poy", "-inputfile", "fas", "-stderr", "./transform/stderr/FILENAME1.transform11.err" ]),
    (["-message", "Transform fas,ss,aa with static_approx:keep" , "-command", "./transform/transform12.poy" , "-inputfile", "fas" , "-stderr", "./transform/stderr/FILENAME1.transform12.err" ]),
#   (["-message", "Transform trailing insertion DOES THIS WORK?", "-command", "./transform/transform13.poy",
    (["-message", "Transform fas,ss,aa with tcm" , "-command", "./transform/transform17.poy" , "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform17.err" ]),
    (["-message", "Transform fas,ss,aa with integer weight" , "-command", "./transform/transform19.poy" , "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform19.err" ]),
    (["-message", "Transform fas,ss,aa with float weightfactor" , "-command", "./transform/transform21.poy" , "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform21.err" ]),
    (["-message", "Transform fas,ss,aa with float weight", "-command", "./transform/transform23.poy" , "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform23.err" ]),
    (["-message", "Transform fas,ss,aa with intege weightfactor", "-command", "./transform/transform25.poy" , "-inputfile", "fas" , "-inputfile", "ss" , "-inputfile", "aa" , "-stderr", "./transform/stderr/FILENAME1_FILENAME2_FILENAME3.transform25.err" ]),
]

break_inversion = [
#    (["-message", "", "-command", "./custom_alphabet/transform64.poy" , "-inputfile", "fas" ,
#    (["-message", "", "-command", "./custom_alphabet/transform65.poy" , "-inputfile", "fas" ,
#    (["-message", "", "-command", "./custom_alphabet/transform66.poy" , "-inputfile", "fas" ,
#    (["-message", "", "-command", "./custom_alphabet/transform67.poy" , "-inputfile", "fas" ,
#    (["-message", "", "-command", "./custom_alphabet/transform68.poy" , "-inputfile", "fas" ,
#    (["-message", "", "-command", "./custom_alphabet/transform69.poy" , "-inputfile", "fas" ,
]

custom_alphabet = [
    (["-message", "Custom Alphabet DNA tcm:(1,2) default build, swap", "-command", "./custom_alphabet/transform70.poy"]),
    (["-message", "Custom Alphabet DNA tcm:(1,2) default build, swap, static-approx ", "-command", "./custom_alphabet/transform71.poy"]),
    (["-message", "Custom Alphabet DNA tcm:(1,2) w/out init3d, build, swap", "-command", "./custom_alphabet/transform72.poy"]),
    (["-message", "Custom Alphabet DNA tcm:(1,2) tiebreaker, build, swap", "-command", "./custom_alphabet/transform73.poy"]),
    (["-message", "Custom Alphabet DNA tcm:(1,2) level 3, build, swap", "-command", "./custom_alphabet/transform74.poy"]),
    (["-message", "Custom Alphabet UT_louse level 2/tie breaker, build, swap", "-command", "./custom_alphabet/transform75.poy"]),
    (["-message", "Custom Alphabet UT_louse build, swap", "-command", "./custom_alphabet/transform76.poy"]),
    (["-message", "Custom Alphabet UT_louse build, static-approx", "-command", "./custom_alphabet/transform77.poy"]),
    (["-message", "Custom Alphabet Prealigned DNA tcm:(1,2), build, swap", "-command", "./custom_alphabet/transform78.poy"])
]


transform_unannotated_scripts = [
    (["-command","./chromosome/transform41.ua.poy",	"-message", "Read unannotated chromosome using default parameter using locus breakpoint ", "-inputfile", "" ]),
    (["-command","./chromosome/transform42.ua.poy",	"-message", "Read unannotated chromosome using default parameter using locus inversion ", "-inputfile" ]),
    (["-command","./chromosome/transform43.ua.poy",	"-message", "Read unannotated chromosome using default parameter.", "-inputfile" ]),
    (["-command","./chromosome/transform44.ua.poy",	"-message", "Read unannotated chromosome using default parameter. Locus breakpoint set to 1000 ", "-inputfile" ]),
    (["-command","./chromosome/transform45.ua.poy",	"-message", "Read unannotated chromosome using default parameter. Locus inversion set to 1000 ", "-inputfile" ]),
    (["-command","./chromosome/transform46.ua.poy",	"-message", "Read unannotated chromosome using default parameter. Locus dcj set to 1000 ", "-inputfile" ]),
    (["-command","./chromosome/transform47.ua.poy",	"-message", "Read unannotated chromosome using default parameter. Testing if locus breakpoint set to zero works. ", "-inputfile"]),
    (["-command","./chromosome/transform48.ua.poy",	"-message", "Read unannotated chromosome using default parameter. Testing if locus inversion set to zero works. ", "-inputfile"]),
    (["-command","./chromosome/transform49.ua.poy",	"-message", "Read unannotated chromosome using default parameter. Testing if locus dcj set to zero works. ", "-inputfile"]),
    (["-command","./chromosome/transform50.ua.fail.poy","-message", "Read unannotated chromosome using default parameter using locus breakpoint. Caprara median solver.  Metricity problem locus indel ", "-error", "-inputfile"]),
    (["-command","./chromosome/transform58.ua.poy",	"-message", "Read nucleotide file (i.e. unannotated chromosome) and transform to chromosome ", "-inputfile"]),
]

for transform_unannotated_script in transform_unannotated_scripts:
    add_input_file( transform_unannotated_script, 0, "unann" )


transform_chromosome_scripts = [
    (["-command","./chromosome/transform41.an.poy",	"-message", "Read annotated chromosome using default parameter using locus breakpoint.", "-inputfile", "-inputfile" ]),
    (["-command","./chromosome/transform42.an.poy",	"-message", "Read annotated chromosome using default parameter using locus inversion.", "-inputfile", "-inputfile" ]),
    (["-command","./chromosome/transform43.an.poy",	"-message", "Read annotated chromosome using default parameter.", "-inputfile" ]),
    (["-command","./chromosome/transform44.an.poy",	"-message", "Read annotated chromosome using default parameter. Locus breakpoint set to 1000 ", "-inputfile" ]),
    (["-command","./chromosome/transform45.an.poy",	"-message", "Read annotated chromosome using default parameter. Locus inversion set to 1000 ", "-inputfile" ]),
    (["-command","./chromosome/transform46.an.poy",	"-message", "Read annotated chromosome using default parameter. Locus dcj set to 1000 ", "-inputfile" ]),
    (["-command","./chromosome/transform47.an.poy",	"-message", "Read annotated chromosome using default parameter. Testing if locus breakpoint set to zero works. ", "-inputfile" ]),
    (["-command","./chromosome/transform48.an.poy",	"-message", "Read annotated chromosome using default parameter. Testing if locus inversion set to zero works. ", "-inputfile"]),
    (["-command","./chromosome/transform49.an.poy",	"-message", "Read annotated chromosome using default parameter. Testing if locus dcj set to zero works. ", "-inputfile"]),
    (["-command","./chromosome/transform50.an.fail.poy",	"-message", "Read annotated chromosome using default parameter using locus breakpoint. Caprara median solver.  Metricity problem locus indel ", "-error", "-inputfile"]),
    (["-command","./chromosome/transform57.an.poy",	"-message", "Read annotated chromosome using default parameter for locus indel and locus breakpoint.  median solvers", "-inputfile", "-inputfile"]),
    (["-command","./chromosome/transform59.an.fail.poy",	"-message", "Read annotated chromosome using default parameter.  Median:10 ", "-inputfile", "-error"]),
    (["-command","./chromosome/transform59.an.poy",	"-message", "Read annotated chromosome using default parameter. Median:1 ", "-inputfile", "-inputfile"]),
    (["-command","./chromosome/transform60.an.fail.poy",	"-message", "Read annotated chromosome using default parameter.  Max_kept_wag:10", "-inputfile", "-error"]),
    (["-command","./chromosome/transform60.an.poy",	"-message", "Read annotated chromosome using default parameter. Max_kept_wag:1  ", "-inputfile"]),
    (["-command","./chromosome/transform61.an.fail.poy",	"-message", "Read annotated chromosome using default parameter.   Swap_med:10 ", "-inputfile", "-error"]),
    (["-command","./chromosome/transform61.an.poy",	"-message", "Read annotated chromosome using default parameter.  Swap_med:1 ", "-inputfile"]),
    (["-command","./chromosome/transform62.an.poy",	"-message", "Read annotated chromosome using default parameter.  med_approx:true ", "-inputfile", "-inputfile"]),
    (["-command","./chromosome/transform63.an.fail.poy",	"-message", "Read annotated chromosome using default parameter.  median:10, med_approx:true, max_kept_wag:10, med_approx:10 ", "-inputfile", "-error"]),
    (["-command","./chromosome/transform63.an.poy",	"-message", "Read annotated chromosome using default parameter. median:1, med_approx:true, max_kept_wag:1, med_approx:1 ", "-inputfile", "-inputfile"])
]
for transform_chromosome_script in transform_chromosome_scripts:
    add_input_file( transform_chromosome_script, 0, "ann" )
    add_input_file( transform_chromosome_script, 1, "median_solvers" )

transform_genome_scripts = [
    (["-command","./chromosome/transform64.poy", "-message", "Read genome and transform using default parameters. Chrom_indel 10,0.9 ", "-inputfile"]),
    (["-command","./chromosome/transform65.poy", "-message", "Read genome and transform using default parameters. Translocation 10 ", "-inputfile"]),
    (["-command","./chromosome/transform66.poy", "-message", "Read genome and transform using default parameters. chrom_breakpoint 100 ", "-inputfile"]),
    (["-command","./chromosome/transform67.poy", "-message", "Read genome and transform using default parameters. chrom_hom:0.75 ", "-inputfile"]),
    (["-command","./chromosome/transform68.poy", "-message", "Read genome and transform using default parameters. Chrom_indel 10,0.9; Translocation 10; chrom_breakpoint 100; chrom_hom:0.75 ", "-inputfile"]),
    (["-command","./chromosome/transform69.poy", "-message", "Read genome and transform using default parameters. Chrom_indel 100,0.1 ", "-inputfile"]),
    (["-command","./chromosome/transform70.poy", "-message", "Read genome and transform using default parameters. Translocation 1000 ", "-inputfile"]),
    (["-command","./chromosome/transform71.poy", "-message", "Read genome and transform using default parameters. chrom_breakpoint 2 ", "-inputfile"]),
    (["-command","./chromosome/transform72.poy", "-message", "Read genome and transform using default parameters. chrom_hom:0.01 ", "-inputfile"]),
    (["-command","./chromosome/transform73.poy", "-message", "Read genome and transform using default parameters. Chrom_indel 10,0.9; Translocation 10; chrom_breakpoint 100; chrom_hom:0.75 ", "-inputfile" ])
]
for transform_genome_script in transform_genome_scripts:
    add_input_file( transform_genome_script, 0, "gen" )

static_transform_scripts = [
    (["-message", "Check transform to static sankoff" , "-command", "./transform_static/transform2_static.poy" ]),
    (["-message", "Check transform to static sankoff with all weight integer","-command", "./transform_static/transform3_static.poy", "-stderr", "./transform_static/stdout/sk_weight.out"  ]),
    (["-message", "Check transform to static sankoff with all weight float" , "-command", "./transform_static/transform4_static.poy", "-stderr", "./transform_static/stdout/sk_weight_float.out"  ]),
    (["-message", "Check transform to static sankoff with all weight factor integer" ,  "-command", "./transform_static/transform5_static.poy", "-stderr", "./transform_static/stdout/sk_weight_factor.out"  ]),
    (["-message", "Check transform to static sankoff with all weight factor float" ,  "-command", "./transform_static/transform6_static.poy", "-stderr","./transform_static/stdout/sk_weight_factor_float.out"  ]),
    (["-message", "Check converting from sequences" , "-command", "./transform_static/transform1_static.poy" , "-inputfile", "first_fasta" ]),
    (["-message", "Transform static with tcm and build" , "-command", "./transform_static/transform_static.poy" , "-stdout", "./transform_static/stdout/transform_static.out" ]),
    (["-message", "Transform static with all fixedstates" , "-command", "./transform_static/transform7_static.poy" , "-stdout", "./transform_static/stdout/transform7_static.out" ]),
    (["-message", "Transform static with all gap_opening" , "-command", "./transform_static/transform8_static.poy" , "-stderr", "./transform_static/stderr/transform8_static.err" , "-stdout", "./transform_static/stderr/transform8_static.out" ]),
    (["-message", "Transform static prealigned (Expect Error)" , "-command", "./transform_static/transform10_static.poy" , "-stderr", "./transform_static/stderr/transform10_static.err" , "-error", "" ]),
    (["-message", "Transform static with all trailing insertion" , "-command", "./transform_static/transform13_static.poy" , "-stderr", "./transform_static/stderr/transform13_static.err", "-stdout", "./transform_static/stderr/transform13_static.out" ]),
    (["-message", "Transform static with all tcm" , "-command", "./transform_static/transform17_static.poy" , "-stderr", "./transform_static/stderr/transform17_static.err", "-stdout", "./transform_static/stderr/transform17_static.out" ]),
    (["-message", "Transform static with all weight integer" , "-command", "./transform_static/transform19_static.poy" , "-stderr", "./transform_static/stderr/transform19_static.err" ]),
    (["-message", "Transform static with all weight factor float" , "-command", "./transform_static/transform21_static.poy" , "-stderr", "./transform_static/stderr/transform21_static.err" , "-stdout", "./transform_static/stderr/transform21_static.out" ]),
    (["-message", "Transform static with all weight float" , "-command", "./transform_static/transform23_static.poy" , "-stderr", "./transform_static/stderr/transform23_static.err" ]),
    (["-message", "Transform static with all weight factor integer" , "-command", "./transform_static/transform25_static.poy" , "-stderr", "./transform_static/stderr/transform25_static.err" , "-stdout", "./transform_static/stderr/transform25_static.out" ])
]


cost_scripts  = [
    (["-message", "Check Tree Cost neg weight tcm(1,2)" , "-command", "./costs/cnc.poy" , "-inputfile", "first_fasta" , "-costfile", "./costs/cnc.costs" ]),
#    (["-message", "Check Tree Cost neg weight tcm(1,2) space saving" , "-command", "./costs/cnc_spave_saving.poy" , "-inputfile", "first_fasta" , "-costfile", "./costs/cnc.costs" ]),
    (["-message", "Check Tree Cost tcm neg weight tcm(1,1)" , "-command", "./costs/cnc1.poy" , "-costfile", "./costs/cnc1.costs" , "-inputfile", "first_fasta" ]),
#    (["-message", "Check Tree Cost tcm neg weight tcm(1,1) space saving" , "-command", "./costs/cnc1_space_saving.poy" , "-costfile", "./costs/cnc1.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost affine neg weight tcm(2,1) GO:1" , "-command", "./costs/cnc2.poy" , "-costfile", "./costs/cnc2.costs" , "-inputfile", "first_fasta" ]),
#    (["-message", "Check Tree Cost affine neg weight tcm(2,1) GO:1 space saving" , "-command", "./costs/cnc2_space_saving.poy" , "-costfile", "./costs/cnc2.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost tcm affine neg weight tcm(3,1) GO:5" , "-command", "./costs/cnc3.poy" , "-costfile", "./costs/cnc3.costs" , "-inputfile", "first_fasta" ]),
#    (["-message", "Check Tree Cost tcm affine neg weight tcm(3,1) GO:5 space saving" , "-command", "./costs/cnc3_space_saving.poy" , "-costfile", "./costs/cnc3.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost tcm(1,2)" , "-command", "./costs/cc.poy" , "-costfile", "./costs/cc.costs" , "-inputfile", "first_fasta" ]),
#    (["-message", "Check Tree Cost tcm(1,2) space saving" , "-command", "./costs/cc_space_saving.poy" , "-costfile", "./costs/cc.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost tcm(1,1)" , "-command", "./costs/cc1.poy" , "-costfile", "./costs/cc1.costs" , "-inputfile", "first_fasta" ]),
#    (["-message", "Check Tree Cost tcm(1,1) space saving" , "-command", "./costs/cc1_space_saving.poy" , "-costfile", "./costs/cc1.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost affine tcm(2,1) GO:1" , "-command", "./costs/cc2.poy" , "-costfile", "./costs/cc2.costs" , "-inputfile", "first_fasta" ]),
#    (["-message", "Check Tree Cost affine tcm(2,1) GO:1 space saving" , "-command", "./costs/cc2_space_saving.poy" , "-costfile", "./costs/cc2.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost affine tcm(3,1) GO:5" , "-command", "./costs/cc3.poy" , "-costfile", "./costs/cc3.costs" , "-inputfile", "first_fasta" ]),
#    (["-message", "Check Tree Cost affine tcm(3,1) GO:5 space saving" , "-command", "./costs/cc3_space_saving.poy" , "-costfile", "./costs/cc3.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost after static approx" , "-command", "./costs/sa.poy" , "-costfile", "./costs/sa.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost after static approx" , "-command", "./costs/sa1.poy" , "-costfile", "./costs/sa1.costs" , "-inputfile", "first_fasta" ]),
    (["-message", "Check Tree Cost with static and polymorphisms" , "-command", "./costs/static_poly.poy" , "-cost", "1298." ])
]


# special scripts from situations we've tailored to our application
special_scripts = [
    (["-message", "Check Non-Zero Diagonal Cost Matrix", "-command", "./non-zero-diag/new_test.poy"])
]
for special_script in special_scripts :
    add_stdcomparisons( special_script, False, True )

##
# replace 0's below to 1 to update stdout/err for scripts in that class.
#   -- Doesn't verify output; ensure things are correct before proceeding
#   -- Only set one 0 -> 1 at a time, else conflicting pushes will result
#      and manual handling of change sets from slave machines required.
#   -- PUSH FROM MASTER TO REPO AFTER
command_scripts = [
    ("Accessory Commands",   accessory_scripts,             0, []),
    ("Dynamic Transforms",   transform_scripts,             0, []),
    ("Chromosome Transforms",transform_chromosome_scripts,  0, []),
    ("UnAnnot. Transforms",  transform_unannotated_scripts, 0, []),
    ("Genome Transforms",    transform_genome_scripts,      0, []),
    ("Custom Alphabet",      custom_alphabet,               0, ["--enable-large-alphabets"]),
    ("Static Transforms",    static_transform_scripts,      0, []),
    ("Select Scripts",       select_scripts,                0, []),
    ("Build/Support Scripts",build_scripts,                 0, []),
    ("Perturb Scripts",      perturb_scripts,               0, []),
    ("Static Perturb",       perturb_static_scripts,        0, []),
    ("Search Scripts",       search_scripts,                0, []),
    ("Fuse Search Scripts",  fuse_scripts,                  0, []),
    ("Report Data Scripts",  report_cmds_scripts,           0, []),
    ("Report Tree Scripts",  report_tree_scripts,           0, []),
    ("Static Likelihood",    static_likelihood_scripts,     0, ["--enable-likelihood"]),
    ("Dynamic Likelihood",   dynamic_likelihood_scripts,    0, ["--enable-likelihood"]),
    ("Cost Scripts",         cost_scripts,                  0, []),
    ("Swap Scripts 0",       swap_scripts_0,                0, []),
    ("Swap Scripts 1",       swap_scripts_1,                0, []),
    ("Swap Scripts 2",       swap_scripts_2,                0, []),
    ("Swap Scripts 3",       swap_scripts_3,                0, []),
    ("Swap Scripts 4",       swap_scripts_4,                0, []),
    ("Swap Static Scripts",  swap_static_scripts,           0, []),
    ("non-zero diagonal",    special_scripts,               0, [])
]

command_builders = []
default_config = ["--enable-interface=flat"]
command_factory_pairs = map (lambda (n,k,d,c):(n,build_tester_script(n,c+default_config,k,d)), command_scripts)
for command_factory_pair in command_factory_pairs:
    add_builder( command_factory_pair, test_cmds_slaves, command_builders )


########################
# Full Analysis Factory
full_scripts  = []

full_builders = []
full_factory_pairs = map(lambda (n,k): (n, build_command_script(["--enable-interface=flat"], k)), full_scripts)
for full_factory_pair in full_factory_pairs:
    add_builder( full_factory_pair, test_full_slaves, full_builders )


########################
# Parallel Analysis Factory
parallel_scripts  = []

parallel_builders = []
parallel_factory_pairs = map(lambda (n,k): (n, build_parallel_script(["--enable-mpi", "CC=mpicc"], k)), parallel_scripts)
for parallel_factory_pair in parallel_factory_pairs:
    add_builder( parallel_factory_pair, test_parallel_slaves, parallel_builders )


###############################################################################
####### SCHEDULERS

# Configure the Schedulers, which decide how/when to react to incoming changes.
from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.scheduler import Nightly
from buildbot.changes import filter
c['schedulers'] = []

# This scheduler will be used to configure and compile commits after the tree
# has been stable for 10minutes. 10minutes is decent since we have a cron-job
# pull every five minutes, so at least two pulls are made in the process.
c['schedulers'].append(SingleBranchScheduler(
                        name="Configuration and Compilation Tests",
                        branch="4_1_development",
                        onlyImportant=True,
                        fileIsImportant=isImportant,
                        treeStableTimer=10*60,
                        builderNames=config_builders))

# A subset of tests to be done each night; These tests run simple transform
# scripts of small data to catch easy bugs, but are too intensive for full
# analysis every commit. Monday = 0.
c['schedulers'].append(Nightly(
                        name="Commands Tests",
                        branch="4_1_development",
                        dayOfWeek=[6,0,1,2,3,4], hour=18, minute=0,  #6pm Sun-Fri
                        onlyImportant=True,
                        fileIsImportant=isImportant,
                        onlyIfChanged=True,
                        builderNames=command_builders))

# Scheduler to run a large dataset and analysis; these are run once a week, over
# the weekend; these tests should be done by tuesday / wednesday the latest.
# This is a collection of tests that take >2hours each.
c['schedulers'].append(Nightly(
                        name="Full Anaylsis Tests",
                        branch="4_1_development",
                        dayOfWeek=[5], hour=0, minute=0,     #midnight F
                        onlyIfChanged=True,
                        builderNames=full_builders))

#c['schedulers'].append(Nightly(
#                        name="Parallel Anaylsis Tests",
#                        branch="4_1_development",
#                        dayOfWeek=[4], hour=20, minute=0,          #8pm F
#                        onlyIfChanged=True,
#                        builderNames=parallel_builders))


###############################################################################
####### STATUS TARGETS
# 'status' is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# including web pages, email senders, and IRC bots.

from buildbot.status import mail
from buildbot.status import html
from buildbot.status.web import authz

# Authorization for commands in the web-interface
authz_cfg=authz.Authz(
    gracefulShutdown = False,
    cleanShutdown = False,
    forceBuild = True,
    forceAllBuilds = True,
    pingBuilder = True,
    stopBuild = True,
    stopAllBuilds = True,
    cancelPendingBuild = True,
    stopChange = True,
    showUsersPage = True,
#    pauseslave = True,

)

c['status'] = []
c['status'].append( mail.MailNotifier(fromaddr="buildbot@@samson", builders=[]) )
c['status'].append( html.WebStatus(http_port=8010, authz=authz_cfg) )

